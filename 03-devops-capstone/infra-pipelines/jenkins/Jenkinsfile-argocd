pipeline {
    agent any
    environment {
        PATH = "${env.HOME}/.local/bin:${env.PATH}"
        KUBECONFIG = "${env.HOME}/.kube/config"  // Adjust if you're using a different path
    }
    stages {
        stage('Install ArgoCD') {
            steps {
                script {
                    sh """
                        kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
                        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
                    """
                }
            }
        }

        stage('Wait for ArgoCD pods') {
            steps {
                script {
                    sh """
                        echo "Waiting for ArgoCD server to be ready..."
                        kubectl wait --namespace argocd \
                          --for=condition=available deployment/argocd-server \
                          --timeout=180s
                    """
                }
            }
        }
    }
    post {
        success {
            echo '✅ ArgoCD has been deployed successfully!'
        }
        failure {
            echo '❌ Failed to deploy ArgoCD.'
        }
    }
}
