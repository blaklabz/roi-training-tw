pipeline {
  agent any

  environment {
    AWS_REGION = 'us-east-1'
    TF_IN_AUTOMATION = 'true'
  }

  stages {
    stage('Init VPC') {
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-credentials'
        ]]) {
          dir("${WORKSPACE}/03-devops-capstone/infra-pipelines/terraform/vpc") {
            sh 'terraform init -input=false -migrate-state'
          }
        }
      }
    }

    stage('Apply VPC') {
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-credentials'
        ]]) {
          dir("${WORKSPACE}/03-devops-capstone/infra-pipelines/terraform/vpc") {
            sh 'terraform apply -auto-approve'
          }
        }
      }
    }

    stage('Init EKS') {
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-credentials'
        ]]) {
          dir("${WORKSPACE}/03-devops-capstone/infra-pipelines/terraform/eks") {
            sh 'terraform init'
          }
        }
      }
    }

    stage('Apply EKS') {
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-credentials'
        ]]) {
          dir("${WORKSPACE}/03-devops-capstone/infra-pipelines/terraform/eks") {
            sh 'terraform apply -auto-approve'
          }
        }
      }
    }
  }

  post {
    failure {
      echo '❌ Pipeline failed. Check logs above.'
    }
    success {
      echo '✅ VPC and EKS successfully provisioned!'
    }
  }
}
